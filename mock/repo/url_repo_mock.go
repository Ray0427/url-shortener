// Code generated by MockGen. DO NOT EDIT.
// Source: repo/url_repo.go

// Package mock_repo is a generated GoMock package.
package mock_repo

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockUrlRepoInterface is a mock of UrlRepoInterface interface.
type MockUrlRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUrlRepoInterfaceMockRecorder
}

// MockUrlRepoInterfaceMockRecorder is the mock recorder for MockUrlRepoInterface.
type MockUrlRepoInterfaceMockRecorder struct {
	mock *MockUrlRepoInterface
}

// NewMockUrlRepoInterface creates a new mock instance.
func NewMockUrlRepoInterface(ctrl *gomock.Controller) *MockUrlRepoInterface {
	mock := &MockUrlRepoInterface{ctrl: ctrl}
	mock.recorder = &MockUrlRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUrlRepoInterface) EXPECT() *MockUrlRepoInterfaceMockRecorder {
	return m.recorder
}

// CreateUrl mocks base method.
func (m *MockUrlRepoInterface) CreateUrl(url string, expireAt time.Time) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUrl", url, expireAt)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUrl indicates an expected call of CreateUrl.
func (mr *MockUrlRepoInterfaceMockRecorder) CreateUrl(url, expireAt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUrl", reflect.TypeOf((*MockUrlRepoInterface)(nil).CreateUrl), url, expireAt)
}

// GetUrl mocks base method.
func (m *MockUrlRepoInterface) GetUrl(hashID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrl", hashID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrl indicates an expected call of GetUrl.
func (mr *MockUrlRepoInterfaceMockRecorder) GetUrl(hashID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrl", reflect.TypeOf((*MockUrlRepoInterface)(nil).GetUrl), hashID)
}
